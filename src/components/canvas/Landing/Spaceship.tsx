/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/staging/spaceship/spaceship.gltf --types --keepnames --simplify --weld --transform 
*/

import type { Mesh, MeshStandardMaterial, Group, AnimationAction, AnimationClip } from 'three'
import { useEffect, useRef } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Ship: Mesh
    Circle: Mesh
    Circle001: Mesh
    Torus001: Mesh
    Torus004: Mesh
    Torus007: Mesh
    Torus000: Mesh
    Torus002: Mesh
    Torus006: Mesh
    Torus003: Mesh
    Torus005: Mesh
  }
  materials: {
    ['Material.001']: MeshStandardMaterial
    ['Material.002']: MeshStandardMaterial
    ['Material.003']: MeshStandardMaterial
    ['Material.003']: MeshStandardMaterial
  }
}

type ActionName = 'RetopoGroup2Action.002' | 'CircleAction.005' | 'CircleAction.004' | 'Key.005Action' | 'Torus.004Action.016' | 'Torus.004Action.019' | 'Key.006Action' | 'Torus.004Action.018' | 'Key.004Action' | 'Torus.004Action.017' | 'Torus.004Action.020' | 'Key.004Action.001' | 'Torus.004Action.015' | 'Key.006Action.001' | 'Torus.004Action.014' | 'Torus.004Action.013'
type GLTFActions = Record<ActionName, AnimationAction>

const FILE_URL = 'https://dqeczc7c9n9n1.cloudfront.net/models/spaceship-1682321499/spaceship-transformed.glb.gz';

export default function Spaceship(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>(null)
  const { nodes, materials, animations } = useGLTF(FILE_URL) as GLTFResult
  const { actions } = useAnimations<AnimationClip>(animations, group)

  useEffect(() => {
    if (!actions) return;
    for (const action of Object.values(actions)) {
      action?.setEffectiveTimeScale(0.75).play();
    }
  }, [actions]);
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" scale={0.5} position={[0.5, 0, -2]} rotation-y={Math.PI / 2}>
        {/* <PerspectiveCamera name="Camera" makeDefault={false} far={1000} near={0.1} fov={39.6} position={[7.28, 3.68, 8.78]} rotation={[-0.36, 0.56, 0.4]} />
        <pointLight name="Spot" intensity={543514.13} decay={2} position={[20.07, 16.47, 35.3]} rotation={[-1.91, -0.45, -0.02]} /> */}
        <mesh name="Ship" geometry={nodes.Ship.geometry} material={materials['Material.001']} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh name="Circle" geometry={nodes.Circle.geometry} material={materials['Material.002']} position={[-111.63, -276.49, -20.31]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 125.33]} />
          <mesh name="Circle001" geometry={nodes.Circle001.geometry} material={materials['Material.002']} position={[109.24, -276.49, -20.31]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 125.33]} />
          <mesh name="Torus001" geometry={nodes.Torus001.geometry} material={materials['Material.003']} position={[-111.63, -569.82, -20.31]} rotation={[-Math.PI / 2, 0, -2.51]} scale={32.77} />
          <mesh name="Torus004" geometry={nodes.Torus004.geometry} material={materials['Material.003']} position={[-111.63, -276.49, -20.31]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
          <mesh name="Torus007" geometry={nodes.Torus007.geometry} material={materials['Material.003']} position={[109.24, -569.82, -20.31]} rotation={[-Math.PI / 2, 0, -2.51]} scale={32.77} />
          <mesh name="Torus000" geometry={nodes.Torus000.geometry} material={materials['Material.003']} morphTargetDictionary={nodes.Torus000.morphTargetDictionary} morphTargetInfluences={nodes.Torus000.morphTargetInfluences} position={[109.24, -667.6, -20.31]} rotation={[-Math.PI / 2, 0, -1.26]} scale={5.76} />
          {/* <pointLight name="Point003" intensity={159738.8} decay={2} color="#ff8334" position={[112.99, -381.93, -18.73]} rotation={[Math.PI, 0.04, 0.04]} scale={100} />
          <pointLight name="Point004" intensity={159738.8} decay={2} color="#ff8334" position={[-127.22, -377.43, -28.92]} rotation={[Math.PI, 0.04, 0.04]} scale={100} /> */}
          <mesh name="Torus002" geometry={nodes.Torus002.geometry} material={materials['Material.003']} morphTargetDictionary={nodes.Torus002.morphTargetDictionary} morphTargetInfluences={nodes.Torus002.morphTargetInfluences} position={[-111.63, -472.04, -20.31]} rotation={[-Math.PI / 2, 0, -2.51]} scale={107.74} />
          <mesh name="Torus006" geometry={nodes.Torus006.geometry} material={materials['Material.003']} morphTargetDictionary={nodes.Torus006.morphTargetDictionary} morphTargetInfluences={nodes.Torus006.morphTargetInfluences} position={[109.24, -472.04, -20.31]} rotation={[-Math.PI / 2, 0, -2.51]} scale={107.74} />
          <mesh name="Torus003" geometry={nodes.Torus003.geometry} material={materials['Material.003']} morphTargetDictionary={nodes.Torus003.morphTargetDictionary} morphTargetInfluences={nodes.Torus003.morphTargetInfluences} position={[-111.63, -374.26, -20.31]} rotation={[-Math.PI / 2, 0, -1.26]} scale={124.96} />
          <mesh name="Torus005" geometry={nodes.Torus005.geometry} material={materials['Material.003']} morphTargetDictionary={nodes.Torus005.morphTargetDictionary} morphTargetInfluences={nodes.Torus005.morphTargetInfluences} position={[109.24, -374.26, -20.31]} rotation={[-Math.PI / 2, 0, -1.26]} scale={124.96} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
