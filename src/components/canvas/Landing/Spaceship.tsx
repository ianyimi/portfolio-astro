/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/staging/spaceship/spaceship.glb --types --keepnames --shadows --transform --simplify
*/

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/staging/spaceship/spaceship.glb --types --keepnames --shadows --transform --simplify
*/
import type { Mesh, MeshStandardMaterial, Group, AnimationAction } from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import type { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Ship: Mesh;
    Circle: Mesh;
    Circle001: Mesh;
    Shield: Mesh;
    Shield001: Mesh;
    Shield002: Mesh;
    Torus001: Mesh;
    Torus004: Mesh;
    Torus007: Mesh;
    Torus000: Mesh;
    Torus002: Mesh;
    Torus003: Mesh;
    Torus005: Mesh;
    Torus006: Mesh;
    Plane: Mesh;
  };
  materials: {
    ['Material.001']: MeshStandardMaterial;
    ['Material.002']: MeshStandardMaterial;
    shield: MeshStandardMaterial;
    ['Material.003']: MeshStandardMaterial;
    ['Material.003']: MeshStandardMaterial;
    ['Material.004']: MeshStandardMaterial;
  };
};

type ActionName =
  | 'RetopoGroup2Action.002'
  | 'CircleAction.005'
  | 'CircleAction.004'
  | 'SphereAction.003'
  | 'SphereAction'
  | 'SphereAction.002'
  | 'Key.005Action'
  | 'Torus.004Action.016'
  | 'Torus.004Action.019'
  | 'Key.006Action'
  | 'Torus.004Action.018'
  | 'Key.004Action'
  | 'Torus.004Action.017'
  | 'Torus.004Action.020'
  | 'Key.004Action.001'
  | 'Torus.004Action.015'
  | 'Key.006Action.001'
  | 'Torus.004Action.014'
  | 'Torus.004Action.013';
type GLTFActions = Record<ActionName, AnimationAction>;

const FILE_URL = 'https://dqeczc7c9n9n1.cloudfront.net/models/spaceship-1681542716/spaceship.glb';

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>(null);
  const { nodes, materials, animations } = useGLTF(FILE_URL) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);

  useEffect(() => {
    if (!actions) return;
    for (const action of Object.values(actions)) {
      if (action.getClip().name.toLowerCase().includes('sphere')) continue;
      // @ts-ignore
      action.setEffectiveTimeScale(0.75).play();
    }
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" scale={0.5} position={[0.5, 0, -2]} rotation-y={Math.PI / 2}>
        <mesh
          name="Ship"
          castShadow
          receiveShadow
          geometry={nodes.Ship.geometry}
          material={materials['Material.001']}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
        >
          <mesh
            name="Circle"
            castShadow
            receiveShadow
            geometry={nodes.Circle.geometry}
            material={materials['Material.002']}
            position={[-111.63, -276.49, -20.31]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 125.33]}
          />
          <mesh
            name="Circle001"
            castShadow
            receiveShadow
            geometry={nodes.Circle001.geometry}
            material={materials['Material.002']}
            position={[109.24, -276.49, -20.31]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 125.33]}
          />
          <mesh
            name="Torus001"
            castShadow
            receiveShadow
            geometry={nodes.Torus001.geometry}
            material={materials['Material.003']}
            position={[-111.63, -569.82, -20.31]}
            rotation={[-Math.PI / 2, 0, -2.51]}
            scale={32.77}
          />
          <mesh
            name="Torus004"
            castShadow
            receiveShadow
            geometry={nodes.Torus004.geometry}
            material={materials['Material.003']}
            position={[-111.63, -276.49, -20.31]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            name="Torus007"
            castShadow
            receiveShadow
            geometry={nodes.Torus007.geometry}
            material={materials['Material.003']}
            position={[109.24, -569.82, -20.31]}
            rotation={[-Math.PI / 2, 0, -2.51]}
            scale={32.77}
          />
          <mesh
            name="Torus000"
            castShadow
            receiveShadow
            geometry={nodes.Torus000.geometry}
            material={materials['Material.003']}
            morphTargetDictionary={nodes.Torus000.morphTargetDictionary}
            morphTargetInfluences={nodes.Torus000.morphTargetInfluences}
            position={[109.24, -667.6, -20.31]}
            rotation={[-Math.PI / 2, 0, -1.26]}
            scale={5.76}
          />
          <mesh
            name="Torus002"
            castShadow
            receiveShadow
            geometry={nodes.Torus002.geometry}
            material={materials['Material.003']}
            morphTargetDictionary={nodes.Torus002.morphTargetDictionary}
            morphTargetInfluences={nodes.Torus002.morphTargetInfluences}
            position={[-111.63, -472.04, -20.31]}
            rotation={[-Math.PI / 2, 0, -2.51]}
            scale={107.74}
          />
          <mesh
            name="Torus003"
            castShadow
            receiveShadow
            geometry={nodes.Torus003.geometry}
            material={materials['Material.003']}
            morphTargetDictionary={nodes.Torus003.morphTargetDictionary}
            morphTargetInfluences={nodes.Torus003.morphTargetInfluences}
            position={[-111.63, -374.26, -20.31]}
            rotation={[-Math.PI / 2, 0, -1.26]}
            scale={124.96}
          />
          <mesh
            name="Torus005"
            castShadow
            receiveShadow
            geometry={nodes.Torus005.geometry}
            material={materials['Material.003']}
            morphTargetDictionary={nodes.Torus005.morphTargetDictionary}
            morphTargetInfluences={nodes.Torus005.morphTargetInfluences}
            position={[109.24, -374.26, -20.31]}
            rotation={[-Math.PI / 2, 0, -1.26]}
            scale={124.96}
          />
          <mesh
            name="Torus006"
            castShadow
            receiveShadow
            geometry={nodes.Torus006.geometry}
            material={materials['Material.003']}
            morphTargetDictionary={nodes.Torus006.morphTargetDictionary}
            morphTargetInfluences={nodes.Torus006.morphTargetInfluences}
            position={[109.24, -472.04, -20.31]}
            rotation={[-Math.PI / 2, 0, -2.51]}
            scale={107.74}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
