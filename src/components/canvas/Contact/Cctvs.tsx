/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/staging/cctvs/cctvs.gltf  --output public/staging/cctvs/cctvs.glb --types --keepnames --transform --simplify
*/

import type { Mesh, MeshStandardMaterial } from 'three'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Rack: Mesh
    Rack_1: Mesh
    Drawer_D: Mesh
    Drawer_A: Mesh
    Drawer_B: Mesh
    Drawer_C: Mesh
    Monitor: Mesh
    Monitor_1: Mesh
    GlassClean: Mesh
    GlassClean001: Mesh
    GlassClean002: Mesh
    GlassClean003: Mesh
    GlassBroken_G: Mesh
    Monitor001: Mesh
    Monitor001_1: Mesh
    Monitor002: Mesh
    Monitor002_1: Mesh
    GlassBroken_A1: Mesh
    Monitor003: Mesh
    Monitor003_1: Mesh
    Monitor004: Mesh
    Monitor004_1: Mesh
    Monitor005: Mesh
    Monitor005_1: Mesh
    GlassBroken_C: Mesh
    Monitor006: Mesh
    Monitor006_1: Mesh
    GlassBroken_B1: Mesh
    GlassBroken_B2: Mesh
    Monitor007: Mesh
    Monitor007_1: Mesh
    Monitor008: Mesh
    Monitor008_1: Mesh
    Monitor009: Mesh
    Monitor009_1: Mesh
    GlassBroken_D2: Mesh
    Monitor010: Mesh
    Monitor010_1: Mesh
    TapeRackCover_Clean_A: Mesh
    TapeRackCover_Clean_B: Mesh
    TapeRackCover_Clean_C: Mesh
    TapeRackCover_Clean_D: Mesh
    TapeRackCover_Clean_E: Mesh
    TapeRackCover_Clean_F: Mesh
    TapeRackCover_DamC_A: Mesh
    TapeRackCover_DamC_B: Mesh
    TapeRackCover_DamC_C: Mesh
    TapeRackCover_DamL_A: Mesh
    TapeRackCover_DamL_B: Mesh
    TapeRackCover_DamR_A: Mesh
    TapeRackCover_DamR_B: Mesh
    TapeRackRail_A: Mesh
    TapeRackRail_B: Mesh
    TapeRackRail_C: Mesh
    TapeRackRail_D: Mesh
    TapeRackWalls_A: Mesh
    TapeRackWalls_B: Mesh
    TapeRackWalls_C: Mesh
    TapeRackWalls_D: Mesh
    TapeRackWalls_E: Mesh
    GlassBroken_F001: Mesh
  }
  materials: {
    Rack: MeshStandardMaterial
    RackShelves: MeshStandardMaterial
    RackDrawer: MeshStandardMaterial
    MonitorBody: MeshStandardMaterial
    MonitorScreen: MeshStandardMaterial
    RackCover: MeshStandardMaterial
  }
}

const FILE_URL = "https://dqeczc7c9n9n1.cloudfront.net/models/cctvs-1682319435/cctvs-transformed.glb.gz"

export default function Cctvs(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Rack_A" position={[0, 0, 0.05]}>
        <mesh name="Rack" geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh name="Rack_1" geometry={nodes.Rack_1.geometry} material={materials.RackShelves} />
      </group>
      <group name="Rack_C" position={[0.66, 0, 0.05]}>
        <mesh name="Rack" geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh name="Rack_1" geometry={nodes.Rack_1.geometry} material={materials.RackShelves} />
      </group>
      <group name="Rack_B" position={[-0.66, 0, 0.05]}>
        <mesh name="Rack" geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh name="Rack_1" geometry={nodes.Rack_1.geometry} material={materials.RackShelves} />
      </group>
      <group name="Rack_D" position={[-1.29, 0, 0.21]} rotation={[0, Math.PI / 6, 0]}>
        <mesh name="Rack" geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh name="Rack_1" geometry={nodes.Rack_1.geometry} material={materials.RackShelves} />
      </group>
      <group name="Rack_E" position={[1.27, 0, 0.21]} rotation={[0, -Math.PI / 6, 0]}>
        <mesh name="Rack" geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh name="Rack_1" geometry={nodes.Rack_1.geometry} material={materials.RackShelves} />
      </group>
      <mesh name="Drawer_D" geometry={nodes.Drawer_D.geometry} material={materials.RackDrawer} position={[-0.66, 0.26, -0.19]} />
      <mesh name="Drawer_A" geometry={nodes.Drawer_A.geometry} material={materials.RackDrawer} position={[-1.41, 0.46, 0.01]} rotation={[0, Math.PI / 6, 0]} />
      <mesh name="Drawer_B" geometry={nodes.Drawer_B.geometry} material={materials.RackDrawer} position={[-1.48, 0.26, -0.11]} rotation={[0, Math.PI / 6, 0]} />
      <mesh name="Drawer_C" geometry={nodes.Drawer_C.geometry} material={materials.RackDrawer} position={[-0.66, 0.46, -0.34]} />
      <group name="Monitor_F" position={[0, 0.77, -0.09]}>
        <mesh name="Monitor" geometry={nodes.Monitor.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor_1" geometry={nodes.Monitor_1.geometry} material={materials.MonitorScreen} />
      </group>
      <mesh name="GlassClean" geometry={nodes.GlassClean.geometry} material={materials.MonitorScreen} position={[1.03, 1.98, -0.18]} rotation={[0, -0.26, 0]} />
      <mesh name="GlassClean001" geometry={nodes.GlassClean001.geometry} material={materials.MonitorScreen} position={[0, 1.43, -0.17]} rotation={[0.01, -0.03, 0.01]} />
      <mesh name="GlassClean002" geometry={nodes.GlassClean002.geometry} material={materials.MonitorScreen} position={[0.66, 1.43, -0.17]} rotation={[0.01, -0.03, 0.01]} />
      <mesh name="GlassClean003" geometry={nodes.GlassClean003.geometry} material={materials.MonitorScreen} position={[0.65, 0.77, -0.08]} rotation={[0.01, -0.03, 0.01]} />
      <mesh name="GlassBroken_G" geometry={nodes.GlassBroken_G.geometry} material={materials.MonitorScreen} position={[0, 0.77, -0.09]} />
      <group name="Monitor_E" position={[0, 1.43, -0.18]}>
        <mesh name="Monitor001" geometry={nodes.Monitor001.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor001_1" geometry={nodes.Monitor001_1.geometry} material={materials.MonitorScreen} />
      </group>
      <group name="Monitor_H" position={[0.66, 0.77, -0.09]}>
        <mesh name="Monitor002" geometry={nodes.Monitor002.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor002_1" geometry={nodes.Monitor002_1.geometry} material={materials.MonitorScreen} />
      </group>
      <mesh name="GlassBroken_A1" geometry={nodes.GlassBroken_A1.geometry} material={materials.MonitorScreen} position={[-0.67, 0.77, -0.09]} />
      <group name="Monitor_G" position={[0.66, 1.43, -0.18]}>
        <mesh name="Monitor003" geometry={nodes.Monitor003.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor003_1" geometry={nodes.Monitor003_1.geometry} material={materials.MonitorScreen} />
      </group>
      <group name="Monitor_D" position={[-0.66, 0.77, -0.09]}>
        <mesh name="Monitor004" geometry={nodes.Monitor004.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor004_1" geometry={nodes.Monitor004_1.geometry} material={materials.MonitorScreen} />
      </group>
      <group name="Monitor_C" position={[-0.66, 1.43, -0.18]}>
        <mesh name="Monitor005" geometry={nodes.Monitor005.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor005_1" geometry={nodes.Monitor005_1.geometry} material={materials.MonitorScreen} />
      </group>
      <mesh name="GlassBroken_C" geometry={nodes.GlassBroken_C.geometry} material={materials.MonitorScreen} position={[-0.66, 1.43, -0.18]} />
      <group name="Monitor_B" position={[-1.36, 0.77, 0.1]} rotation={[0, Math.PI / 6, 0]}>
        <mesh name="Monitor006" geometry={nodes.Monitor006.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor006_1" geometry={nodes.Monitor006_1.geometry} material={materials.MonitorScreen} />
      </group>
      <mesh name="GlassBroken_B1" geometry={nodes.GlassBroken_B1.geometry} material={materials.MonitorScreen} position={[-1.36, 0.77, 0.1]} rotation={[0, Math.PI / 6, 0]} />
      <mesh name="GlassBroken_B2" geometry={nodes.GlassBroken_B2.geometry} material={materials.MonitorScreen} position={[1.34, 0.77, 0.09]} rotation={[0, -Math.PI / 6, 0]} />
      <group name="Monitor_A" position={[-1.4, 1.43, 0.02]} rotation={[0, Math.PI / 6, 0]}>
        <mesh name="Monitor007" geometry={nodes.Monitor007.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor007_1" geometry={nodes.Monitor007_1.geometry} material={materials.MonitorScreen} />
      </group>
      <group name="Monitor_J" position={[1.34, 0.77, 0.09]} rotation={[0, -Math.PI / 6, 0]}>
        <mesh name="Monitor008" geometry={nodes.Monitor008.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor008_1" geometry={nodes.Monitor008_1.geometry} material={materials.MonitorScreen} />
      </group>
      <group name="Monitor_I" position={[1.39, 1.43, 0.02]} rotation={[0, -Math.PI / 6, 0]}>
        <mesh name="Monitor009" geometry={nodes.Monitor009.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor009_1" geometry={nodes.Monitor009_1.geometry} material={materials.MonitorScreen} />
      </group>
      <mesh name="GlassBroken_D2" geometry={nodes.GlassBroken_D2.geometry} material={materials.MonitorScreen} position={[1.39, 1.43, 0.02]} rotation={[0, -Math.PI / 6, 0]} />
      <group name="Monitor_K" position={[1.03, 1.98, -0.18]} rotation={[0, -0.26, 0]}>
        <mesh name="Monitor010" geometry={nodes.Monitor010.geometry} material={materials.MonitorBody} />
        <mesh name="Monitor010_1" geometry={nodes.Monitor010_1.geometry} material={materials.MonitorScreen} />
      </group>
      <mesh name="TapeRackCover_Clean_A" geometry={nodes.TapeRackCover_Clean_A.geometry} material={materials.RackDrawer} position={[-0.66, 0.52, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_Clean_B" geometry={nodes.TapeRackCover_Clean_B.geometry} material={materials.RackDrawer} position={[0, 0.52, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_Clean_C" geometry={nodes.TapeRackCover_Clean_C.geometry} material={materials.RackDrawer} position={[0, 0.33, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_Clean_D" geometry={nodes.TapeRackCover_Clean_D.geometry} material={materials.RackDrawer} position={[0.66, 0.52, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_Clean_E" geometry={nodes.TapeRackCover_Clean_E.geometry} material={materials.RackDrawer} position={[0.66, 0.33, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_Clean_F" geometry={nodes.TapeRackCover_Clean_F.geometry} material={materials.RackDrawer} position={[1.28, 0.13, 0.2]} rotation={[Math.PI / 2, 0, Math.PI / 6]} />
      <mesh name="TapeRackCover_DamC_A" geometry={nodes.TapeRackCover_DamC_A.geometry} material={materials.RackDrawer} position={[-1.29, 0.33, 0.21]} rotation={[Math.PI / 2, 0, -Math.PI / 6]} />
      <mesh name="TapeRackCover_DamC_B" geometry={nodes.TapeRackCover_DamC_B.geometry} material={materials.RackDrawer} position={[0, 0.13, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_DamC_C" geometry={nodes.TapeRackCover_DamC_C.geometry} material={materials.RackDrawer} position={[1.28, 0.33, 0.2]} rotation={[Math.PI / 2, 0, Math.PI / 6]} />
      <mesh name="TapeRackCover_DamL_A" geometry={nodes.TapeRackCover_DamL_A.geometry} material={materials.RackDrawer} position={[0.66, 0.13, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackCover_DamL_B" geometry={nodes.TapeRackCover_DamL_B.geometry} material={materials.RackDrawer} position={[1.28, 0.52, 0.2]} rotation={[Math.PI / 2, 0, Math.PI / 6]} />
      <mesh name="TapeRackCover_DamR_A" geometry={nodes.TapeRackCover_DamR_A.geometry} material={materials.RackDrawer} position={[-1.29, 0.13, 0.21]} rotation={[Math.PI / 2, 0, -Math.PI / 6]} />
      <mesh name="TapeRackCover_DamR_B" geometry={nodes.TapeRackCover_DamR_B.geometry} material={materials.RackDrawer} position={[-0.66, 0.13, 0.04]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh name="TapeRackRail_A" geometry={nodes.TapeRackRail_A.geometry} material={materials.RackCover} position={[-1.48, 0.46, -0.11]} rotation={[0, Math.PI / 6, 0]} />
      <mesh name="TapeRackRail_B" geometry={nodes.TapeRackRail_B.geometry} material={materials.RackCover} position={[-1.48, 0.26, -0.11]} rotation={[0, Math.PI / 6, 0]} />
      <mesh name="TapeRackRail_C" geometry={nodes.TapeRackRail_C.geometry} material={materials.RackCover} position={[-0.66, 0.46, -0.33]} />
      <mesh name="TapeRackRail_D" geometry={nodes.TapeRackRail_D.geometry} material={materials.RackCover} position={[-0.66, 0.26, -0.33]} />
      <mesh name="TapeRackWalls_A" geometry={nodes.TapeRackWalls_A.geometry} material={materials.RackCover} position={[-1.31, 0, 0.17]} rotation={[0, Math.PI / 6, 0]} />
      <mesh name="TapeRackWalls_B" geometry={nodes.TapeRackWalls_B.geometry} material={materials.RackCover} position={[-0.66, 0, 0]} />
      <mesh name="TapeRackWalls_C" geometry={nodes.TapeRackWalls_C.geometry} material={materials.RackCover} />
      <mesh name="TapeRackWalls_D" geometry={nodes.TapeRackWalls_D.geometry} material={materials.RackCover} position={[0.66, 0, 0]} />
      <mesh name="TapeRackWalls_E" geometry={nodes.TapeRackWalls_E.geometry} material={materials.RackCover} position={[1.3, 0, 0.17]} rotation={[0, -Math.PI / 6, 0]} />
      <mesh name="GlassBroken_F001" geometry={nodes.GlassBroken_F001.geometry} material={materials.MonitorScreen} position={[-1.4, 1.43, 0.02]} rotation={[0, 0.5, 0]} />
    </group>
  )
}

useGLTF.preload(FILE_URL)
