/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/staging/cctvs/cctvs.glb --types --keepnames --shadows --transform --simplify
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Rack: THREE.Mesh;
    Rack_1: THREE.Mesh;
    Drawer_D: THREE.Mesh;
    Drawer_A: THREE.Mesh;
    Drawer_B: THREE.Mesh;
    Drawer_C: THREE.Mesh;
    VCRRecorder: THREE.Mesh;
    VHSTape: THREE.Mesh;
    Cables: THREE.Mesh;
    Monitor: THREE.Mesh;
    Monitor_1: THREE.Mesh;
    GlassClean: THREE.Mesh;
    GlassClean001: THREE.Mesh;
    GlassClean002: THREE.Mesh;
    GlassClean003: THREE.Mesh;
    GlassBroken_G: THREE.Mesh;
    GlassBroken_A1: THREE.Mesh;
    GlassBroken_C: THREE.Mesh;
    GlassBroken_B1: THREE.Mesh;
    GlassBroken_B2: THREE.Mesh;
    GlassBroken_D2: THREE.Mesh;
    TapeRackCover_Clean_A: THREE.Mesh;
    TapeRackCover_Clean_B: THREE.Mesh;
    TapeRackCover_Clean_C: THREE.Mesh;
    TapeRackCover_Clean_D: THREE.Mesh;
    TapeRackCover_Clean_E: THREE.Mesh;
    TapeRackCover_Clean_F: THREE.Mesh;
    TapeRackCover_DamC_A: THREE.Mesh;
    TapeRackCover_DamC_B: THREE.Mesh;
    TapeRackCover_DamC_C: THREE.Mesh;
    TapeRackCover_DamL_A: THREE.Mesh;
    TapeRackCover_DamL_B: THREE.Mesh;
    TapeRackCover_DamR_A: THREE.Mesh;
    TapeRackCover_DamR_B: THREE.Mesh;
    TapeRackCover_Loose_A: THREE.Mesh;
    TapeRackCover_Loose_B: THREE.Mesh;
    TapeRackRail_A: THREE.Mesh;
    TapeRackRail_B: THREE.Mesh;
    TapeRackRail_C: THREE.Mesh;
    TapeRackRail_D: THREE.Mesh;
    TapeRackWalls_A: THREE.Mesh;
    TapeRackWalls_B: THREE.Mesh;
    TapeRackWalls_C: THREE.Mesh;
    TapeRackWalls_D: THREE.Mesh;
    TapeRackWalls_E: THREE.Mesh;
    GlassBroken_F001: THREE.Mesh;
  };
  materials: {
    Rack: THREE.MeshStandardMaterial;
    RackShelves: THREE.MeshStandardMaterial;
    RackDrawer: THREE.MeshStandardMaterial;
    VCR: THREE.MeshStandardMaterial;
    Cables: THREE.MeshStandardMaterial;
    MonitorBody: THREE.MeshStandardMaterial;
    MonitorScreen: THREE.MeshStandardMaterial;
    RackCover: THREE.MeshStandardMaterial;
  };
};

const FILE_URL = 'https://dqeczc7c9n9n1.cloudfront.net/models/cctvs-1681539396/cctvs.glb';

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Rack_A" position={[0, 0, 0.05]}>
        <mesh name="Rack" castShadow receiveShadow geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh
          name="Rack_1"
          castShadow
          receiveShadow
          geometry={nodes.Rack_1.geometry}
          material={materials.RackShelves}
        />
      </group>
      <group name="Rack_C" position={[0.66, 0, 0.05]}>
        <mesh name="Rack" castShadow receiveShadow geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh
          name="Rack_1"
          castShadow
          receiveShadow
          geometry={nodes.Rack_1.geometry}
          material={materials.RackShelves}
        />
      </group>
      <group name="Rack_B" position={[-0.66, 0, 0.05]}>
        <mesh name="Rack" castShadow receiveShadow geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh
          name="Rack_1"
          castShadow
          receiveShadow
          geometry={nodes.Rack_1.geometry}
          material={materials.RackShelves}
        />
      </group>
      <group name="Rack_D" position={[-1.29, 0, 0.21]} rotation={[0, Math.PI / 6, 0]}>
        <mesh name="Rack" castShadow receiveShadow geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh
          name="Rack_1"
          castShadow
          receiveShadow
          geometry={nodes.Rack_1.geometry}
          material={materials.RackShelves}
        />
      </group>
      <group name="Rack_E" position={[1.27, 0, 0.21]} rotation={[0, -Math.PI / 6, 0]}>
        <mesh name="Rack" castShadow receiveShadow geometry={nodes.Rack.geometry} material={materials.Rack} />
        <mesh
          name="Rack_1"
          castShadow
          receiveShadow
          geometry={nodes.Rack_1.geometry}
          material={materials.RackShelves}
        />
      </group>
      <mesh
        name="Drawer_D"
        castShadow
        receiveShadow
        geometry={nodes.Drawer_D.geometry}
        material={materials.RackDrawer}
        position={[-0.66, 0.26, -0.19]}
      />
      <mesh
        name="Drawer_A"
        castShadow
        receiveShadow
        geometry={nodes.Drawer_A.geometry}
        material={materials.RackDrawer}
        position={[-1.48, 0.46, -0.11]}
        rotation={[0, Math.PI / 6, 0]}
      />
      <mesh
        name="Drawer_B"
        castShadow
        receiveShadow
        geometry={nodes.Drawer_B.geometry}
        material={materials.RackDrawer}
        position={[-1.48, 0.26, -0.11]}
        rotation={[0, Math.PI / 6, 0]}
      />
      <mesh
        name="Drawer_C"
        castShadow
        receiveShadow
        geometry={nodes.Drawer_C.geometry}
        material={materials.RackDrawer}
        position={[-0.66, 0.46, -0.34]}
      />
      <mesh
        name="VCRRecorder"
        castShadow
        receiveShadow
        geometry={nodes.VCRRecorder.geometry}
        material={materials.VCR}
        position={[-0.66, 0.28, 0.08]}
      />
      <mesh
        name="VHSTape"
        castShadow
        receiveShadow
        geometry={nodes.VHSTape.geometry}
        material={materials.VCR}
        position={[-1.48, 0.48, 0.08]}
        rotation={[0, -0.94, 0]}
      />
      <mesh
        name="Cables"
        castShadow
        receiveShadow
        geometry={nodes.Cables.geometry}
        material={materials.Cables}
        position={[0, 0, 0.05]}
      />
      <group name="Monitor_F" position={[0, 0.77, -0.09]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_E" position={[0, 1.43, -0.18]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_H" position={[0.66, 0.77, -0.09]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_G" position={[0.66, 1.43, -0.18]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_D" position={[-0.66, 0.77, -0.09]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_C" position={[-0.66, 1.43, -0.18]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_B" position={[-1.36, 0.77, 0.1]} rotation={[0, Math.PI / 6, 0]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_A" position={[-1.4, 1.43, 0.02]} rotation={[0, Math.PI / 6, 0]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_J" position={[1.34, 0.77, 0.09]} rotation={[0, -Math.PI / 6, 0]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_I" position={[1.39, 1.43, 0.02]} rotation={[0, -Math.PI / 6, 0]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <group name="Monitor_K" position={[1.03, 1.98, -0.18]} rotation={[0, -0.26, 0]}>
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={materials.MonitorBody}
        />
        <mesh
          name="Monitor_1"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_1.geometry}
          material={materials.MonitorScreen}
        />
      </group>
      <mesh
        name="GlassClean"
        castShadow
        receiveShadow
        geometry={nodes.GlassClean.geometry}
        material={materials.MonitorScreen}
        position={[1.03, 1.98, -0.18]}
        rotation={[0, -0.26, 0]}
      />
      <mesh
        name="GlassClean001"
        castShadow
        receiveShadow
        geometry={nodes.GlassClean001.geometry}
        material={materials.MonitorScreen}
        position={[0, 1.43, -0.17]}
        rotation={[0.01, -0.03, 0.01]}
      />
      <mesh
        name="GlassClean002"
        castShadow
        receiveShadow
        geometry={nodes.GlassClean002.geometry}
        material={materials.MonitorScreen}
        position={[0.66, 1.43, -0.17]}
        rotation={[0.01, -0.03, 0.01]}
      />
      <mesh
        name="GlassClean003"
        castShadow
        receiveShadow
        geometry={nodes.GlassClean003.geometry}
        material={materials.MonitorScreen}
        position={[0.65, 0.77, -0.08]}
        rotation={[0.01, -0.03, 0.01]}
      />
      <mesh
        name="GlassBroken_G"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_G.geometry}
        material={materials.MonitorScreen}
        position={[0, 0.77, -0.09]}
      />
      <mesh
        name="GlassBroken_A1"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_A1.geometry}
        material={materials.MonitorScreen}
        position={[-0.67, 0.77, -0.09]}
      />
      <mesh
        name="GlassBroken_C"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_C.geometry}
        material={materials.MonitorScreen}
        position={[-0.66, 1.43, -0.18]}
      />
      <mesh
        name="GlassBroken_B1"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_B1.geometry}
        material={materials.MonitorScreen}
        position={[-1.36, 0.77, 0.1]}
        rotation={[0, Math.PI / 6, 0]}
      />
      <mesh
        name="GlassBroken_B2"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_B2.geometry}
        material={materials.MonitorScreen}
        position={[1.34, 0.77, 0.09]}
        rotation={[0, -Math.PI / 6, 0]}
      />
      <mesh
        name="GlassBroken_D2"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_D2.geometry}
        material={materials.MonitorScreen}
        position={[1.39, 1.43, 0.02]}
        rotation={[0, -Math.PI / 6, 0]}
      />
      <mesh
        name="TapeRackCover_Clean_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Clean_A.geometry}
        material={materials.RackDrawer}
        position={[-0.66, 0.52, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_Clean_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Clean_B.geometry}
        material={materials.RackDrawer}
        position={[0, 0.52, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_Clean_C"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Clean_C.geometry}
        material={materials.RackDrawer}
        position={[0, 0.33, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_Clean_D"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Clean_D.geometry}
        material={materials.RackDrawer}
        position={[0.66, 0.52, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_Clean_E"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Clean_E.geometry}
        material={materials.RackDrawer}
        position={[0.66, 0.33, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_Clean_F"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Clean_F.geometry}
        material={materials.RackDrawer}
        position={[1.28, 0.13, 0.2]}
        rotation={[Math.PI / 2, 0, Math.PI / 6]}
      />
      <mesh
        name="TapeRackCover_DamC_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamC_A.geometry}
        material={materials.RackDrawer}
        position={[-1.29, 0.33, 0.21]}
        rotation={[Math.PI / 2, 0, -Math.PI / 6]}
      />
      <mesh
        name="TapeRackCover_DamC_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamC_B.geometry}
        material={materials.RackDrawer}
        position={[0, 0.13, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_DamC_C"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamC_C.geometry}
        material={materials.RackDrawer}
        position={[1.28, 0.33, 0.2]}
        rotation={[Math.PI / 2, 0, Math.PI / 6]}
      />
      <mesh
        name="TapeRackCover_DamL_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamL_A.geometry}
        material={materials.RackDrawer}
        position={[0.66, 0.13, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_DamL_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamL_B.geometry}
        material={materials.RackDrawer}
        position={[1.28, 0.52, 0.2]}
        rotation={[Math.PI / 2, 0, Math.PI / 6]}
      />
      <mesh
        name="TapeRackCover_DamR_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamR_A.geometry}
        material={materials.RackDrawer}
        position={[-1.29, 0.13, 0.21]}
        rotation={[Math.PI / 2, 0, -Math.PI / 6]}
      />
      <mesh
        name="TapeRackCover_DamR_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_DamR_B.geometry}
        material={materials.RackDrawer}
        position={[-0.66, 0.13, 0.04]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        name="TapeRackCover_Loose_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Loose_A.geometry}
        material={materials.RackDrawer}
        position={[-1.51, 0.29, 0.38]}
        rotation={[0, -1.08, -1.54]}
      />
      <mesh
        name="TapeRackCover_Loose_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackCover_Loose_B.geometry}
        material={materials.RackDrawer}
        position={[-0.68, 0.18, 0.19]}
        rotation={[-3.08, 0.17, 0.22]}
      />
      <mesh
        name="TapeRackRail_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackRail_A.geometry}
        material={materials.RackCover}
        position={[-1.48, 0.46, -0.11]}
        rotation={[0, Math.PI / 6, 0]}
      />
      <mesh
        name="TapeRackRail_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackRail_B.geometry}
        material={materials.RackCover}
        position={[-1.48, 0.26, -0.11]}
        rotation={[0, Math.PI / 6, 0]}
      />
      <mesh
        name="TapeRackRail_C"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackRail_C.geometry}
        material={materials.RackCover}
        position={[-0.66, 0.46, -0.33]}
      />
      <mesh
        name="TapeRackRail_D"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackRail_D.geometry}
        material={materials.RackCover}
        position={[-0.66, 0.26, -0.33]}
      />
      <mesh
        name="TapeRackWalls_A"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackWalls_A.geometry}
        material={materials.RackCover}
        position={[-1.31, 0, 0.17]}
        rotation={[0, Math.PI / 6, 0]}
      />
      <mesh
        name="TapeRackWalls_B"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackWalls_B.geometry}
        material={materials.RackCover}
        position={[-0.66, 0, 0]}
      />
      <mesh
        name="TapeRackWalls_C"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackWalls_C.geometry}
        material={materials.RackCover}
      />
      <mesh
        name="TapeRackWalls_D"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackWalls_D.geometry}
        material={materials.RackCover}
        position={[0.66, 0, 0]}
      />
      <mesh
        name="TapeRackWalls_E"
        castShadow
        receiveShadow
        geometry={nodes.TapeRackWalls_E.geometry}
        material={materials.RackCover}
        position={[1.3, 0, 0.17]}
        rotation={[0, -Math.PI / 6, 0]}
      />
      <mesh
        name="GlassBroken_F001"
        castShadow
        receiveShadow
        geometry={nodes.GlassBroken_F001.geometry}
        material={materials.MonitorScreen}
        position={[-1.4, 1.43, 0.02]}
        rotation={[0, 0.5, 0]}
      />
    </group>
  );
}

useGLTF.preload(FILE_URL);
