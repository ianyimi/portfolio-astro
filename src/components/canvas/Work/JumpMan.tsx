/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/staging/jumpman/jumpMan.glb  --types --keepnames --shadows --transform --simplify
*/

import type { SkinnedMesh, Bone, MeshStandardMaterial, AnimationAction, Group } from 'three';
import React, { useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import type { GLTF } from 'three-stdlib';
import { useEffect } from 'react';

type GLTFResult = GLTF & {
  nodes: {
    Mesh: SkinnedMesh;
    Mesh_1: SkinnedMesh;
    Mesh_2: SkinnedMesh;
    mixamorig9Hips: Bone;
  };
  materials: {
    Ch06_body: MeshStandardMaterial;
    Ch06_eyelashes: MeshStandardMaterial;
    Ch06_body1: MeshStandardMaterial;
  };
};

type ActionName = 'Armature|mixamo.com|Layer0';
type GLTFActions = Record<ActionName, AnimationAction>;

const FILE_URL = 'https://dqeczc7c9n9n1.cloudfront.net/models/jumpman-1682043199/jumpMan.glb';

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>();
  const { nodes, materials, animations } = useGLTF(FILE_URL) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  useEffect(() => {
    Object.values(actions).forEach((action?: AnimationAction) => {
      console.log('play');
      action && action.play();
    });
  }, [actions]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorig9Hips} />
          <group name="Ch06">
            <skinnedMesh
              name="Mesh"
              geometry={nodes.Mesh.geometry}
              material={materials.Ch06_body}
              skeleton={nodes.Mesh.skeleton}
            />
            <skinnedMesh
              name="Mesh_1"
              geometry={nodes.Mesh_1.geometry}
              material={materials.Ch06_eyelashes}
              skeleton={nodes.Mesh_1.skeleton}
            />
            <skinnedMesh
              name="Mesh_2"
              geometry={nodes.Mesh_2.geometry}
              material={materials.Ch06_body1}
              skeleton={nodes.Mesh_2.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
