---
import '~/assets/styles/base.css';

import MetaTags from '~/components/common/MetaTags.astro';
import BasicScripts from '~/components/common/BasicScripts.astro';

import Canvas from '~/components/canvas';
import type { MetaSEO } from '~/types';
import { SITE } from '~/config.mjs';
import Scroll from '~/components/dom/Scroll';

export interface Props {
  meta?: MetaSEO;
}

const { meta = {} } = Astro.props;
const { language = 'en', textDirection = 'ltr' } = SITE;

const defaultCanvasProps = {
  gl: {
    powerPreference: 'high-performance',
    antialias: true,
    depth: true,
    // alpha: false,
    stencil: false,
  },
  camera: {
    near: 0.01,
    far: 2000,
    fov: 75,
    // zoom: isMobile ? 0.75 : 1
    // makeDefault: true,
    // position: position,
    // quaternion: quaternion,
  },
  resize: { polyfill: ResizeObserver },
  // dpr: window.devicePixelRatio,
  // events: undefined,
};
---

<!DOCTYPE html>
<html lang={language} dir={textDirection} class="2xl:text-[20px]">
  <head>
    <MetaTags {...meta} />
    <script is:inline>
      // source - https://github.com/saadeghi/theme-change
      // ☝️ This script prevent the FART effect.
      if (localStorage.getItem('theme') === null) {
        document.documentElement.setAttribute('data-theme', 'light');
      } else document.documentElement.setAttribute('data-theme', localStorage.getItem('theme'));
      // "theme" LocalStorage value is set by the package to remember user preference.
      // The value is checked and applyed before rendering anything.
    </script>
    <script src="https://cdn.jsdelivr.net/npm/theme-change@2.0.2/index.js"></script>
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js"></script> -->
  </head>

  <div class="antialiased text-page bg-light dark:text-slate-300 tracking-tight dark:bg-dark">
    <div id="main">
      <div id="domContent" class="z-0 absolute inset-0 overflow-hidden">
        <!-- <Scroll client:load> -->
        <slot />
        <!-- </Scroll> -->
      </div>
      <div class="-z-[1] absolute min-w-[100%] min-h-[100%]">
        <Canvas defaultCanvasProps={defaultCanvasProps} client:only="react" />
      </div>
    </div>
    <BasicScripts />
    <style is:global>
      img {
        content-visibility: auto;
      }
    </style>
  </div>
</html>
